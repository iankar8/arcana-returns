export default function AuthenticationPage() {
  return (
    <div>
      <h1 className="text-4xl font-bold mb-4">Authentication</h1>
      <p className="text-xl text-gray-400 mb-8">
        Secure your API requests with API keys and JWT tokens
      </p>

      <div className="space-y-8 text-gray-300">
        <section>
          <h2 className="text-2xl font-bold mb-4">API Keys</h2>
          <p className="mb-4">
            All API requests require authentication using an API key. Include your API key in the <code className="text-blue-400">Authorization</code> header:
          </p>
          <pre className="bg-gray-900 p-4 rounded-lg overflow-x-auto text-sm">
            <code>{`Authorization: Bearer sk_live_your_api_key_here`}</code>
          </pre>
          
          <div className="mt-4 bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4">
            <p className="text-sm">
              <strong>⚠️ Keep your API keys secure!</strong> Never commit them to version control or expose them in client-side code.
            </p>
          </div>
        </section>

        <section>
          <h2 className="text-2xl font-bold mb-4">Key Types</h2>
          <div className="space-y-4">
            <div className="border-l-4 border-blue-500 pl-4">
              <h3 className="font-semibold mb-2">Live Keys (sk_live_...)</h3>
              <p className="text-sm text-gray-400">
                Use in production. Processes real returns and charges.
              </p>
            </div>
            <div className="border-l-4 border-gray-500 pl-4">
              <h3 className="font-semibold mb-2">Test Keys (sk_test_...)</h3>
              <p className="text-sm text-gray-400">
                Use in development. Safe for testing without affecting production data.
              </p>
            </div>
          </div>
        </section>

        <section>
          <h2 className="text-2xl font-bold mb-4">Return Tokens</h2>
          <p className="mb-4">
            Return tokens are signed JWT tokens that bind a specific return request to a policy snapshot. They're generated by the <code className="text-blue-400">/returns/token</code> endpoint.
          </p>
          <pre className="bg-gray-900 p-4 rounded-lg overflow-x-auto text-sm">
            <code>{`{
  "return_token": "eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9...",
  "expires_at": "2024-01-01T12:00:00Z",
  "policy_snapshot_hash": "sha256:abc123..."
}`}</code>
          </pre>
        </section>

        <section>
          <h2 className="text-2xl font-bold mb-4">Security Best Practices</h2>
          <ul className="list-disc list-inside space-y-2">
            <li>Store API keys in environment variables</li>
            <li>Use different keys for development and production</li>
            <li>Rotate keys regularly</li>
            <li>Monitor API usage for suspicious activity</li>
            <li>Never log or expose return tokens in client-side code</li>
          </ul>
        </section>

        <section>
          <h2 className="text-2xl font-bold mb-4">Example: Environment Setup</h2>
          <p className="mb-4">
            Store your keys in a <code className="text-blue-400">.env</code> file:
          </p>
          <pre className="bg-gray-900 p-4 rounded-lg overflow-x-auto text-sm">
            <code>{`# .env
ARCANA_API_KEY=sk_live_your_api_key_here
ARCANA_API_URL=https://arcana-returns-api.fly.dev`}</code>
          </pre>
          
          <p className="mt-4 mb-4">Then use it in your code:</p>
          <pre className="bg-gray-900 p-4 rounded-lg overflow-x-auto text-sm">
            <code>{`const apiKey = process.env.ARCANA_API_KEY;

const response = await fetch(process.env.ARCANA_API_URL + '/returns/token', {
  headers: {
    'Authorization': \`Bearer \${apiKey}\`,
    'Content-Type': 'application/json'
  }
});`}</code>
          </pre>
        </section>
      </div>
    </div>
  );
}
